import java.util.regex.Matcher
import java.util.regex.Pattern

ext {
    app = [
            appVerCode       : 1,
            appVerName       : "1.1.0" + "-${releaseTime()}",
            applicationId    : "com.yeoh.example",
            versionNameSuffix: getCurrentVersionSuffix(),
            minSdkVersion    : 14
    ]

    store = [
            storeKey     : '../sign/JustKiddingBaby.jks',
            storePassword: 'mimajiushiwo',
            keyAlias     : 'JustKiddingBaby',
            keyPassword  : 'mimajiushiwo'
    ]

    seeker = [
            userOrg: 'jkb',
            groupId: 'com.yeoh.seeker',
            desc   : 'A plugin can hide the public methods with Hide annotation and build jar and aar automatically.',
            website: 'https://github.com/JustKiddingBaby/Seeker'
    ]

    versions = [
            gradle_tools         : '3.1.4',
            targetSDK            : 26,
            compileSDK           : 26,
            minSDK               : 14,
            buildTool            : "27.0.3",
            android_gradle_plugin: "3.0.1",
            zhihu_gradle_plugin  : "3.0.1-47",
            kotlin               : "1.2.60",

            seeker               : '0.1.0',
            seeker_annotation    : '0.1.0',
            seeker_processor     : '0.1.0',
            seeker_plugin        : '0.1.0',

            appcompat_V7         : "27.1.1",
            constraintLayout     : '1.1.3',
            supportAnnotations   : '27.1.1',

            junit                : '4.12',
            testRunner           : '1.0.2',
            testEspressoXore     : '3.0.2',

            gson                 : '2.8.5',
            aspectJ              : '1.8.9',
            javapoet             : '1.11.1',
            autoSerivice         : '1.0-rc3',
            javassist            : '3.24.0-GA',
            javaparser_core      : '3.7.1',
            joor                 : '0.9.0'
    ]
}

def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}

def getCurrentVersionSuffix() {
    def currentFlavor = getCurrentFlavor()
    if (currentFlavor == "prod") {
        return "-prod"
    } else if (currentFlavor == "uat") {
        return "-uat"
    } else if (currentFlavor == "dev") {
        return "-dev"
    }
}

def getCurrentFlavor() {
    String taskRequestName = getGradle().getStartParameter().getTaskRequests().toString()
    Pattern pattern
    if (taskRequestName.contains("assemble")) {
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    } else {
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")
    }
    Matcher matcher = pattern.matcher(taskRequestName)
    if (matcher.find()) {
        return matcher.group(1).toLowerCase()
    } else {
        return ""
    }
}